<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#
	var serviceNames = new [] {
	"Customers",
	"Orders",
	"Products",
	};
#>
using CompositeUI.Service.Infrastructure.Consts;

namespace CompositeUI.Service.Infrastructure.ViewEngines
{
<#
	var first = true;
	foreach(var name in serviceNames)
	{
		if(!first)
		{
			WriteLine("");
		}
		else
		{
			first = false;
		}
#>
    public class <#= name #>ViewEngine : ViewEngine
    {
        public override string RouteServiceValue
        {
            get { return <#= name #>Consts.RouteServiceValue; }
        }

        public <#= name #>ViewEngine()
        {
            AreaViewLocationFormats = new[]
            {
                "~/" + <#= name #>Consts.ServiceViewFolder +"/Areas/{2}/Views/{1}/{0}.cshtml",
                "~/" + <#= name #>Consts.ServiceViewFolder +"/Areas/{2}/Views/{1}/{0}.vbhtml",
                "~/" + <#= name #>Consts.ServiceViewFolder +"/Areas/{2}/Views/Shared/{0}.cshtml",
                "~/" + <#= name #>Consts.ServiceViewFolder +"/Areas/{2}/Views/Shared/{0}.vbhtml"
            };
            AreaMasterLocationFormats = new[]
            {
                "~/" + <#= name #>Consts.ServiceViewFolder +"/Areas/{2}/Views/{1}/{0}.cshtml",
                "~/" + <#= name #>Consts.ServiceViewFolder +"/Areas/{2}/Views/{1}/{0}.vbhtml",
                "~/" + <#= name #>Consts.ServiceViewFolder +"/Areas/{2}/Views/Shared/{0}.cshtml",
                "~/" + <#= name #>Consts.ServiceViewFolder +"/Areas/{2}/Views/Shared/{0}.vbhtml"
            };
            AreaPartialViewLocationFormats = new[]
            {
                "~/" + <#= name #>Consts.ServiceViewFolder +"/Areas/{2}/Views/{1}/{0}.cshtml",
                "~/" + <#= name #>Consts.ServiceViewFolder +"/Areas/{2}/Views/{1}/{0}.vbhtml",
                "~/" + <#= name #>Consts.ServiceViewFolder +"/Areas/{2}/Views/Shared/{0}.cshtml",
                "~/" + <#= name #>Consts.ServiceViewFolder +"/Areas/{2}/Views/Shared/{0}.vbhtml"
            };
            ViewLocationFormats = new[]
            {
                "~/" + <#= name #>Consts.ServiceViewFolder +"/Views/{1}/{0}.cshtml",
                "~/" + <#= name #>Consts.ServiceViewFolder +"/Views/{1}/{0}.vbhtml",
                "~/" + <#= name #>Consts.ServiceViewFolder +"/Views/Shared/{0}.cshtml",
                "~/" + <#= name #>Consts.ServiceViewFolder +"/Views/Shared/{0}.vbhtml"
            };
            MasterLocationFormats = new[]
            {
                "~/" + <#= name #>Consts.ServiceViewFolder +"/Views/{1}/{0}.cshtml",
                "~/" + <#= name #>Consts.ServiceViewFolder +"/Views/{1}/{0}.vbhtml",
                "~/" + <#= name #>Consts.ServiceViewFolder +"/Views/Shared/{0}.cshtml",
                "~/" + <#= name #>Consts.ServiceViewFolder +"/Views/Shared/{0}.vbhtml"
            };
            PartialViewLocationFormats = new[]
            {
                "~/" + <#= name #>Consts.ServiceViewFolder +"/Views/{1}/{0}.cshtml",
                "~/" + <#= name #>Consts.ServiceViewFolder +"/Views/{1}/{0}.vbhtml",
                "~/" + <#= name #>Consts.ServiceViewFolder +"/Views/Shared/{0}.cshtml",
                "~/" + <#= name #>Consts.ServiceViewFolder +"/Views/Shared/{0}.vbhtml"
            };
            FileExtensions = new[]
            {
                "cshtml",
                "vbhtml"
            };
        }
    }
<#
	}
#>
}